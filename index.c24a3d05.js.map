{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,C,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,6I,G,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAS,EAAM,gBAAgB,CAAC,MAChC,EAAQ,CAAM,CAAC,EAAE,CACjB,EAAW,CAAM,CAAC,EAAE,CACpB,EAAM,CAAM,CAAC,EAAE,CACf,EAAS,CAAM,CAAC,EAAE,CAElB,EAAY,EAAM,gBAAgB,CAAC,MAmEzC,EAAM,gBAAgB,CAAC,QAAS,eAjER,EAQhB,EAPN,CADsB,EAAJ,AAAA,EAkEP,GAlEO,KAAA,CAAC,IACd,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,IAAM,EAAQ,EAAE,iBAAiB,CAAC,WAAW,CACvC,EAAQ,EAAE,iBAAiB,CAAC,WAAW,CAE7C,OAAO,EAAM,aAAa,CAAC,EAC7B,GAEM,EAAa,CAAI,CAAC,EAAE,CAAC,UAAU,CAGrC,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,EAAW,WAAW,CAAC,EACzB,EAsDF,GAEA,EAAS,gBAAgB,CAAC,QAAS,eArDP,EAQpB,EAPN,CAD0B,EAAJ,AAAA,EAsDP,GAtDO,KAAA,CAAC,IAClB,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,IAAM,EAAY,EAAE,QAAQ,CAAC,EAAE,CAAC,WAAW,CACrC,EAAY,EAAE,QAAQ,CAAC,EAAE,CAAC,WAAW,CAE3C,OAAO,EAAU,aAAa,CAAC,EACjC,GAEM,EAAa,CAAI,CAAC,EAAE,CAAC,UAAU,CAErC,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,EAAW,WAAW,CAAC,EACzB,EA2CF,GAEA,EAAI,gBAAgB,CAAC,QAAS,eA1CP,EAQf,EAPN,CADqB,EAAJ,AAAA,EA2CP,GA3CO,KAAA,CAAC,IACb,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EAIE,OAAO,AAHM,OAAO,EAAE,QAAQ,CAAC,EAAE,CAAC,WAAW,EAChC,OAAO,EAAE,QAAQ,CAAC,EAAE,CAAC,WAAW,CAG/C,GAEM,EAAa,CAAI,CAAC,EAAE,CAAC,UAAU,CAErC,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,EAAW,WAAW,CAAC,EACzB,EAgCF,GAEA,EAAO,gBAAgB,CAAC,QAAS,eA/BP,EAYlB,EAXN,CADwB,EAAJ,AAAA,EAgCP,GAhCO,KAAA,CAAC,IAChB,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EAQE,OAAO,AAPS,OACd,EAAE,gBAAgB,CAAC,WAAW,CAAC,OAAO,CAAC,aAAc,KAEvC,OACd,EAAE,gBAAgB,CAAC,WAAW,CAAC,OAAO,CAAC,aAAc,IAIzD,GAEM,EAAa,CAAI,CAAC,EAAE,CAAC,UAAU,CAErC,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,EAAW,WAAW,CAAC,EACzB,EAiBF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_array(arr) {\n    return _array_with_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_rest();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar thead = document.querySelector(\"thead\");\nvar tbody = document.querySelector(\"tbody\");\nvar titles = thead.querySelectorAll(\"th\");\nvar names = titles[0];\nvar position = titles[1];\nvar age = titles[2];\nvar salary = titles[3];\nvar employees = tbody.querySelectorAll(\"tr\");\nfunction sortByName(param) {\n    var _param = _to_array(param), list = _param.slice(0);\n    list.sort(function(a, b) {\n        var nameA = a.firstElementChild.textContent;\n        var nameB = b.firstElementChild.textContent;\n        return nameA.localeCompare(nameB);\n    });\n    var parentList = list[0].parentNode;\n    // Переміщуємо відсортовані елементи назад у батьківський елемент\n    list.forEach(function(item) {\n        parentList.appendChild(item); // Переміщує елемент у нову позицію\n    });\n}\nfunction sortByPosition(param) {\n    var _param = _to_array(param), list = _param.slice(0);\n    list.sort(function(a, b) {\n        var positionA = a.children[1].textContent;\n        var positionB = b.children[1].textContent;\n        return positionA.localeCompare(positionB);\n    });\n    var parentList = list[0].parentNode;\n    list.forEach(function(item) {\n        parentList.appendChild(item);\n    });\n}\nfunction sortByAge(param) {\n    var _param = _to_array(param), list = _param.slice(0);\n    list.sort(function(a, b) {\n        var ageA = Number(a.children[2].textContent);\n        var ageB = Number(b.children[2].textContent);\n        return ageA - ageB;\n    });\n    var parentList = list[0].parentNode;\n    list.forEach(function(item) {\n        parentList.appendChild(item);\n    });\n}\nfunction sortBySalary(param) {\n    var _param = _to_array(param), list = _param.slice(0);\n    list.sort(function(a, b) {\n        var salaryA = Number(a.lastElementChild.textContent.replace(/[^0-9.-]+/g, \"\"));\n        var salaryB = Number(b.lastElementChild.textContent.replace(/[^0-9.-]+/g, \"\"));\n        return salaryA - salaryB;\n    });\n    var parentList = list[0].parentNode;\n    list.forEach(function(item) {\n        parentList.appendChild(item);\n    });\n}\nnames.addEventListener(\"click\", function() {\n    sortByName(employees);\n});\nposition.addEventListener(\"click\", function() {\n    sortByPosition(employees);\n});\nage.addEventListener(\"click\", function() {\n    sortByAge(employees);\n});\nsalary.addEventListener(\"click\", function() {\n    sortBySalary(employees);\n});\n\n//# sourceMappingURL=index.c24a3d05.js.map\n","'use strict';\n\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst titles = thead.querySelectorAll('th');\nconst names = titles[0];\nconst position = titles[1];\nconst age = titles[2];\nconst salary = titles[3];\n\nconst employees = tbody.querySelectorAll('tr');\n\nfunction sortByName([...list]) {\n  list.sort((a, b) => {\n    const nameA = a.firstElementChild.textContent;\n    const nameB = b.firstElementChild.textContent;\n\n    return nameA.localeCompare(nameB);\n  });\n\n  const parentList = list[0].parentNode;\n\n  // Переміщуємо відсортовані елементи назад у батьківський елемент\n  list.forEach((item) => {\n    parentList.appendChild(item); // Переміщує елемент у нову позицію\n  });\n}\n\nfunction sortByPosition([...list]) {\n  list.sort((a, b) => {\n    const positionA = a.children[1].textContent;\n    const positionB = b.children[1].textContent;\n\n    return positionA.localeCompare(positionB);\n  });\n\n  const parentList = list[0].parentNode;\n\n  list.forEach((item) => {\n    parentList.appendChild(item);\n  });\n}\n\nfunction sortByAge([...list]) {\n  list.sort((a, b) => {\n    const ageA = Number(a.children[2].textContent);\n    const ageB = Number(b.children[2].textContent);\n\n    return ageA - ageB;\n  });\n\n  const parentList = list[0].parentNode;\n\n  list.forEach((item) => {\n    parentList.appendChild(item);\n  });\n}\n\nfunction sortBySalary([...list]) {\n  list.sort((a, b) => {\n    const salaryA = Number(\n      a.lastElementChild.textContent.replace(/[^0-9.-]+/g, ''),\n    );\n    const salaryB = Number(\n      b.lastElementChild.textContent.replace(/[^0-9.-]+/g, ''),\n    );\n\n    return salaryA - salaryB;\n  });\n\n  const parentList = list[0].parentNode;\n\n  list.forEach((item) => {\n    parentList.appendChild(item);\n  });\n}\n\nnames.addEventListener('click', () => {\n  sortByName(employees);\n});\n\nposition.addEventListener('click', () => {\n  sortByPosition(employees);\n});\n\nage.addEventListener('click', () => {\n  sortByAge(employees);\n});\n\nsalary.addEventListener('click', () => {\n  sortBySalary(employees);\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_array","_array_with_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_rest","TypeError","thead","document","querySelector","tbody","titles","querySelectorAll","names","position","age","salary","employees","addEventListener","list","parentList","_param","sort","a","b","nameA","firstElementChild","textContent","nameB","localeCompare","parentNode","forEach","item","appendChild","positionA","children","positionB","ageA","Number","salaryA","lastElementChild","replace"],"version":3,"file":"index.c24a3d05.js.map"}